{"version":3,"sources":["Components/Quote.js","App.js","reportWebVitals.js","index.js"],"names":["Quote","useState","quote","setQuote","getQuote","fetch","then","response","json","data","useEffect","content","author","className","type","onClick","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PA6BeA,MA3Bf,WACI,IACA,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACMC,EAAS,WACXC,MAHO,mCAINC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAI,OAAEN,EAASM,OAEzBC,qBAAU,WACTN,MACE,IACH,IAAOO,EAAmBT,EAAnBS,QAAUC,EAASV,EAATU,OACjB,OACI,gCACI,kDACA,sBAAKC,UAAU,OAAf,UACA,mCAAMF,KACN,uBACA,2CAAcC,EAAd,OACA,uBACA,wBAAQC,UAAU,MAAMC,KAAK,SAASC,QAAW,kBAAMX,KAAvD,8BCXGY,MARf,WACE,OACE,qBAAKH,UAAU,MAAf,SACA,cAAC,EAAD,OCMWI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a39f2256.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport './Quote.css';\r\nfunction Quote() {\r\n    const url= \" https://api.quotable.io/random\";\r\n    const [quote, setQuote] = useState(\"\");\r\n    const getQuote=()=>{\r\n        fetch(url)\r\n        .then(response=> response.json())\r\n        .then(data=>setQuote(data))\r\n    }\r\n    useEffect(() => {\r\n     getQuote()   \r\n    }, [])\r\n    const {content , author}= quote;\r\n    return (\r\n        <div>\r\n            <h1> Quote Generator</h1>\r\n            <div className=\"data\">\r\n            <h4> {content}</h4>\r\n            <br/>\r\n            <h6>Author : {author} </h6>\r\n            <br/>\r\n            <button className=\"btn\" type=\"submit\" onClick = {() => getQuote() }>New Quote</button>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Quote\r\n","\nimport './App.css';\nimport Quote from './Components/Quote';\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Quote/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}